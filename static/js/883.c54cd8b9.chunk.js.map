{"version":3,"file":"static/js/883.c54cd8b9.chunk.js","mappings":"uQAwDA,EAjDqB,WAAO,IAAD,IACzB,GAAwCA,EAAAA,EAAAA,UAAS,CAAC,GAAlD,eAAOC,EAAP,KAAqBC,EAArB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACAE,EAAuDJ,EAAvDI,MAAOC,EAAgDL,EAAhDK,YAAaC,EAAmCN,EAAnCM,aAAcC,EAAqBP,EAArBO,SAAUC,EAAWR,EAAXQ,OAE9CC,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2BC,EAAAA,QAAAA,SAM7C,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAab,GAASc,MAAK,SAAAC,GAAI,OAAIhB,EAAgBgB,EAApB,GAChC,GAAE,CAACf,KAGF,iCACE,gCACE,SAAC,EAAAgB,KAAD,CAAMC,GAAIV,EAAV,sBACA,gBACEW,IAAKf,EAAW,UAAMgB,EAAAA,IAAN,OAAqBhB,GAAgBiB,EACrDC,IAAKnB,EACLoB,MAAM,WAGR,wBAAKpB,GAAgB,cACrB,wCACeE,EAAY,UAAMmB,KAAKC,MAAqB,GAAfpB,GAAjB,KAAyC,MAGpE,sCACA,uBAAIC,GAAsB,oBAEzBC,IACC,iCACE,oCACA,uBAAIA,EAAOmB,KAAI,SAAAC,GAAK,gBAAOA,EAAMC,KAAb,iBAI1B,gCACE,oDACA,SAAC,EAAAX,KAAD,CAAMC,GAAIN,EAAAA,QAAAA,KAAV,mBACA,SAAC,EAAAK,KAAD,CAAMC,GAAIN,EAAAA,QAAAA,QAAV,sBAEA,SAAC,EAAAiB,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,WAKT,C,2NCpDYV,EAAe,kCACtBW,EAAW,+BACXC,EAAU,mCAEVC,EAAQ,SAKVC,EAAU,CACZC,OAAQ,CACNC,QAASJ,IAIAK,EAAiB,mCAAG,6GAENC,EAAAA,EAAAA,IAAUP,EAdpB,sBAcyCG,GAFzB,cAEvBK,EAFuB,yBAItBA,EAASvB,MAJa,gCAM7BwB,QAAQC,IAAI,iBAAkB,KAAMC,SANP,yDAAH,qDAUjB5B,EAAY,mCAAG,WAAM6B,GAAN,iGAEDL,EAAAA,EAAAA,GAAM,GAAD,OAAIP,GAAJ,OAAeE,EAAf,YAAwBU,GAAMT,GAFlC,cAElBK,EAFkB,yBAIjBA,EAASvB,MAJQ,gCAMxBwB,QAAQC,IAAI,iBAAkB,KAAMC,SANZ,yDAAH,sDAUZE,EAAe,mCAAG,WAAMD,GAAN,iGAEJL,EAAAA,EAAAA,GAAM,GAAD,OACvBP,GADuB,OACZE,EADY,YACHU,GADG,OAhChB,YAkCVT,GAJyB,cAErBK,EAFqB,yBAOpBA,EAASvB,MAPW,gCAS3BwB,QAAQC,IAAI,iBAAkB,KAAMC,SATT,yDAAH,sDAafG,EAAe,mCAAG,WAAMF,GAAN,iGAEJL,EAAAA,EAAAA,GAAM,GAAD,OACvBP,GADuB,OACZE,EADY,YACHU,GADG,OA5ChB,YA8CVT,GAJyB,cAErBK,EAFqB,yBAOpBA,EAASvB,MAPW,gCAS3BwB,QAAQC,IAAI,iBAAkB,KAAMC,SATT,yDAAH,sDAafI,EAAe,mCAAG,WAAMC,GAAN,gFACzBb,EAAU,CACZC,OAAQ,CACNC,QAASJ,EACTe,MAAOA,IAJkB,mBASJT,EAAAA,EAAAA,GAAM,GAAD,OAAIP,GAAJ,OA/DjB,iBA+D0CG,GAT1B,cASrBK,EATqB,yBAWpBA,EAASvB,MAXW,gCAa3BwB,QAAQC,IAAI,iBAAkB,KAAMC,SAbT,yDAAH,qD","sources":["pages/MovieDetails/MovieDetails.js","services/api.js"],"sourcesContent":["import { Suspense, useEffect, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport PAGE_NAMES from 'router/paths';\nimport { getMovieById } from 'services/api';\nimport { BASE_IMG_URL } from 'services/api';\nimport defaultPoster from '../../images/default-poster.webp';\n\nconst MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState({});\n  const { movieId } = useParams();\n  const { title, poster_path, vote_average, overview, genres } = movieDetails;\n  const location = useLocation();\n  const backlinkHref = location.state?.from ?? PAGE_NAMES.homepage;\n\n  useEffect(() => {\n    getMovieById(movieId).then(data => setMovieDetails(data));\n  }, [movieId]);\n\n  return (\n    <>\n      <section>\n        <Link to={backlinkHref}>Go back</Link>\n        <img\n          src={poster_path ? `${BASE_IMG_URL}${poster_path}` : defaultPoster}\n          alt={title}\n          width=\"300px\"\n        ></img>\n\n        <h2>{title ? title : 'No title'}</h2>\n        <p>\n          User Score: {vote_average ? `${Math.round(vote_average * 10)}%` : 0}\n        </p>\n\n        <h3>Overview</h3>\n        <p>{overview ? overview : 'No overview yet'}</p>\n\n        {genres && (\n          <>\n            <h3>Genres</h3>\n            <p>{genres.map(genre => `${genre.name} `)}</p>\n          </>\n        )}\n      </section>\n      <section>\n        <h4>Additional information</h4>\n        <Link to={PAGE_NAMES.cast}>Cast</Link>\n        <Link to={PAGE_NAMES.reviews}>Reviews</Link>\n\n        <Suspense fallback={<div>Loading...</div>}>\n          <Outlet></Outlet>\n        </Suspense>\n      </section>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nexport const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'e90e5cc72f12501ca886fe4fb737b4cc';\nconst TRENDING = '/trending/movie/day';\nconst MOVIE = '/movie';\nconst CREDITS = '/credits';\nconst REVIEWS = '/reviews';\nconst SEARCH = '/search/movie';\n\nlet options = {\n  params: {\n    api_key: API_KEY,\n  },\n};\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await axios.get(BASE_URL + TRENDING, options);\n\n    return response.data;\n  } catch (error) {\n    console.log('error.message:', error.message);\n  }\n};\n\nexport const getMovieById = async id => {\n  try {\n    const response = await axios(`${BASE_URL}${MOVIE}/${id}`, options);\n\n    return response.data;\n  } catch (error) {\n    console.log('error.message:', error.message);\n  }\n};\n\nexport const getMovieCredits = async id => {\n  try {\n    const response = await axios(\n      `${BASE_URL}${MOVIE}/${id}${CREDITS}`,\n      options\n    );\n\n    return response.data;\n  } catch (error) {\n    console.log('error.message:', error.message);\n  }\n};\n\nexport const getMovieReviews = async id => {\n  try {\n    const response = await axios(\n      `${BASE_URL}${MOVIE}/${id}${REVIEWS}`,\n      options\n    );\n\n    return response.data;\n  } catch (error) {\n    console.log('error.message:', error.message);\n  }\n};\n\nexport const getMovieByQuery = async query => {\n  let options = {\n    params: {\n      api_key: API_KEY,\n      query: query,\n    },\n  };\n\n  try {\n    const response = await axios(`${BASE_URL}${SEARCH}`, options);\n\n    return response.data;\n  } catch (error) {\n    console.log('error.message:', error.message);\n  }\n};\n"],"names":["useState","movieDetails","setMovieDetails","movieId","useParams","title","poster_path","vote_average","overview","genres","backlinkHref","useLocation","state","from","PAGE_NAMES","useEffect","getMovieById","then","data","Link","to","src","BASE_IMG_URL","defaultPoster","alt","width","Math","round","map","genre","name","Suspense","fallback","BASE_URL","API_KEY","MOVIE","options","params","api_key","getTrendingMovies","axios","response","console","log","message","id","getMovieCredits","getMovieReviews","getMovieByQuery","query"],"sourceRoot":""}