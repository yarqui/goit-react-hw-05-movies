{"version":3,"file":"static/js/919.7eca1d9b.chunk.js","mappings":"yOAgCA,EA5BgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBN,GAASO,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QAC/BJ,EAAgBI,EACjB,GACF,GAAE,CAACR,KAGF,8BAC2B,IAAxBG,EAAaM,QACZ,wBACGN,EAAaO,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OAChB,2BACE,qCAAaD,EAAb,QACA,uBAAIC,MAFGF,EADO,OAQpB,uEAIP,C,2NC5BYG,EAAe,kCACtBC,EAAW,+BACXC,EAAU,mCAEVC,EAAQ,SAKVC,EAAU,CACZC,OAAQ,CACNC,QAASJ,IAIAK,EAAiB,mCAAG,6GAENC,EAAAA,EAAAA,IAAUP,EAdpB,sBAcyCG,GAFzB,cAEvBK,EAFuB,yBAItBA,EAASC,MAJa,gCAM7BC,QAAQC,IAAI,iBAAkB,KAAMC,SANP,yDAAH,qDAUjBC,EAAY,mCAAG,WAAMjB,GAAN,iGAEDW,EAAAA,EAAAA,GAAM,GAAD,OAAIP,GAAJ,OAAeE,EAAf,YAAwBN,GAAMO,GAFlC,cAElBK,EAFkB,yBAIjBA,EAASC,MAJQ,gCAMxBC,QAAQC,IAAI,iBAAkB,KAAMC,SANZ,yDAAH,sDAUZE,EAAe,mCAAG,WAAMlB,GAAN,iGAEJW,EAAAA,EAAAA,GAAM,GAAD,OACvBP,GADuB,OACZE,EADY,YACHN,GADG,OAhChB,YAkCVO,GAJyB,cAErBK,EAFqB,yBAOpBA,EAASC,MAPW,gCAS3BC,QAAQC,IAAI,iBAAkB,KAAMC,SATT,yDAAH,sDAafrB,EAAe,mCAAG,WAAMK,GAAN,iGAEJW,EAAAA,EAAAA,GAAM,GAAD,OACvBP,GADuB,OACZE,EADY,YACHN,GADG,OA5ChB,YA8CVO,GAJyB,cAErBK,EAFqB,yBAOpBA,EAASC,MAPW,gCAS3BC,QAAQC,IAAI,iBAAkB,KAAMC,SATT,yDAAH,sDAafG,EAAe,mCAAG,WAAMC,GAAN,gFACzBb,EAAU,CACZC,OAAQ,CACNC,QAASJ,EACTe,MAAOA,IAJkB,mBASJT,EAAAA,EAAAA,GAAM,GAAD,OAAIP,GAAJ,OA/DjB,iBA+D0CG,GAT1B,cASrBK,EATqB,yBAWpBA,EAASC,MAXW,gCAa3BC,QAAQC,IAAI,iBAAkB,KAAMC,SAbT,yDAAH,qD","sources":["components/Reviews/Reviews.js","services/api.js"],"sourcesContent":["import { getMovieReviews } from 'services/api';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [movieReviews, setMovieReviews] = useState([]);\n\n  useEffect(() => {\n    getMovieReviews(movieId).then(({ results }) => {\n      setMovieReviews(results);\n    });\n  }, [movieId]);\n\n  return (\n    <>\n      {movieReviews.length !== 0 ? (\n        <ul>\n          {movieReviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <h5>Author: {author}.</h5>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>'We dont have any reviews for this movie' </p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nexport const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w500';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'e90e5cc72f12501ca886fe4fb737b4cc';\nconst TRENDING = '/trending/movie/day';\nconst MOVIE = '/movie';\nconst CREDITS = '/credits';\nconst REVIEWS = '/reviews';\nconst SEARCH = '/search/movie';\n\nlet options = {\n  params: {\n    api_key: API_KEY,\n  },\n};\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await axios.get(BASE_URL + TRENDING, options);\n\n    return response.data;\n  } catch (error) {\n    console.log('error.message:', error.message);\n  }\n};\n\nexport const getMovieById = async id => {\n  try {\n    const response = await axios(`${BASE_URL}${MOVIE}/${id}`, options);\n\n    return response.data;\n  } catch (error) {\n    console.log('error.message:', error.message);\n  }\n};\n\nexport const getMovieCredits = async id => {\n  try {\n    const response = await axios(\n      `${BASE_URL}${MOVIE}/${id}${CREDITS}`,\n      options\n    );\n\n    return response.data;\n  } catch (error) {\n    console.log('error.message:', error.message);\n  }\n};\n\nexport const getMovieReviews = async id => {\n  try {\n    const response = await axios(\n      `${BASE_URL}${MOVIE}/${id}${REVIEWS}`,\n      options\n    );\n\n    return response.data;\n  } catch (error) {\n    console.log('error.message:', error.message);\n  }\n};\n\nexport const getMovieByQuery = async query => {\n  let options = {\n    params: {\n      api_key: API_KEY,\n      query: query,\n    },\n  };\n\n  try {\n    const response = await axios(`${BASE_URL}${SEARCH}`, options);\n\n    return response.data;\n  } catch (error) {\n    console.log('error.message:', error.message);\n  }\n};\n"],"names":["movieId","useParams","useState","movieReviews","setMovieReviews","useEffect","getMovieReviews","then","results","length","map","id","author","content","BASE_IMG_URL","BASE_URL","API_KEY","MOVIE","options","params","api_key","getTrendingMovies","axios","response","data","console","log","message","getMovieById","getMovieCredits","getMovieByQuery","query"],"sourceRoot":""}